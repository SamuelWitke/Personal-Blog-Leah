{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/static_queries/useBlogInfoImage.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/static_queries/useSiteMetadata.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","a","React","createContext","PropTypes","object","string","isRequired","func","Header","props","react_default","createElement","className","headerStyles","header","page","info_page","header__nav","role","aria-label","gatsby_browser_entry","to","title","Image","circular","size","src","image","publicURL","activeClassName","navItemActive","Layout","splits","relativePath","_useSiteMetadata","useSiteMetadata","description","profile_picture","infoData","split","length","_3809808562","data","allFile","edges","find","node","includes","layoutStyles","layout","style","backgroundColor","bgColor","Helmet_default","lang","name","content","children","m","module","exports","require","default","_public_static_d_1335937568_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAC,EAAA,sBAAAF,EAAAG,IAAAT,EAAA,KAa2BU,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,+FClEP,SAASC,EAAOC,GAC7B,OACEC,EAAAV,EAAAW,cAAA,UACEC,UAAcC,IAAaC,OAAlB,KAA2C,SAAfL,EAAMM,MACzCF,IAAaG,YAEfN,EAAAV,EAAAW,cAAA,OACEC,UAAWC,IAAaI,YACxBC,KAAK,aACLC,aAAW,mBAEXT,EAAAV,EAAAW,cAACS,EAAA,EAAD,CAAMC,GAAG,KACPX,EAAAV,EAAAW,cAAA,UAAKF,EAAMa,OACXZ,EAAAV,EAAAW,cAACY,EAAA,EAAD,CACEC,UAAQ,EACRC,KAAK,QACLC,IACEjB,EAAMkB,MAAMC,aAIlBlB,EAAAV,EAAAW,cAAA,WACED,EAAAV,EAAAW,cAAA,UACED,EAAAV,EAAAW,cAACS,EAAA,EAAD,CACEC,GACiB,SAAfZ,EAAMM,KACF,IACA,QAENc,gBAAiBhB,IAAaiB,eAEd,SAAfrB,EAAMM,KACH,QACA,sGC/BH,SAASgB,EAAOtB,GAAO,ICJ5BuB,EACAC,EDG4BC,EACwBC,cAApDb,EAD4BY,EAC5BZ,MAAOc,EADqBF,EACrBE,YAAwBC,EADHH,EACRI,SAAWD,gBACjCV,GCNEK,EDMuBK,ECNLE,MAAM,KACxBN,EAAeD,EAAOA,EAAOQ,OAAS,GAC/BC,EAAAC,KAkBMC,QAAQC,MAAMC,KAAK,SAAAlB,GAAK,OAAIA,EAAMmB,KAAKb,aAAac,SAASd,KACnEa,MDdf,OACEpC,EAAAV,EAAAW,cAAA,WACEC,UAAcoC,IAAaC,OAAlB,KACQ,SAAfxC,EAAMM,MACNiC,IAAahC,WACfkC,MAAO,CACLC,gBAAiB1C,EAAM2C,UAGzB1C,EAAAV,EAAAW,cAAC0C,EAAArD,EAAD,KACEU,EAAAV,EAAAW,cAAA,QAAM2C,KAAK,OACX5C,EAAAV,EAAAW,cAAA,aAAQW,GACRZ,EAAAV,EAAAW,cAAA,QAAM4C,KAAK,cAAcC,QAASpB,KAEpC1B,EAAAV,EAAAW,cAACH,EAAD,CAAQO,KAAMN,EAAMM,KAAMO,MAAOA,EAAOK,MAAOA,IAC/CjB,EAAAV,EAAAW,cAAA,OAAKC,UAAWoC,IAAaQ,SAAU/C,EAAMgD,WAzBnDlE,EAAAO,EAAAC,EAAA,sBAAAgC,yBEAA,IAAsB2B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,iFCEhC,SAASvB,IAyBtB,OAvBa4B,EAAArB,KAuBDsB,KAAKC,2GCtBbC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEpE,IAAMU,cAAc2D,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXP,EAAiBQ,UAAY,CAC3BN,SAAUjE,IAAUwE,MAAM,CACxBC,SAAUzE,IAAUE,OAAOC,aAC1BA,YAGU4D","file":"2-1839c5d31d3d204b302a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport headerStyles from \"../styles/components/header.module.scss\"\nimport { Image } from 'semantic-ui-react'\n\nexport default function Header(props) {\n  return (\n    <header\n      className={`${headerStyles.header} ${props.page === 'info' &&\n        headerStyles.info_page}`}\n    >\n      <nav\n        className={headerStyles.header__nav}\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <Link to=\"/\">\n          <h1>{props.title}</h1>\n          <Image\n            circular\n            size=\"small\"\n            src={\n              props.image.publicURL\n            }\n          />\n        </Link>\n        <div>\n          <h1>\n            <Link\n              to={\n                props.page === 'info'\n                  ? \"/\"\n                  : \"/info\"\n              }\n              activeClassName={headerStyles.navItemActive}\n            >\n              {props.page === 'info'\n                ? \"close\"\n                : \"info\"}\n            </Link>\n          </h1>\n        </div>\n      </nav>\n    </header>\n  )\n}","import React from \"react\"\nimport Header from \"./Header\"\nimport Helmet from \"react-helmet\"\nimport useSiteMetadata from \"../static_queries/useSiteMetadata\"\nimport useBlogInfoImage from '../static_queries/useBlogInfoImage'\nimport layoutStyles from \"../styles/components/layout.module.scss\"\n\nexport default function Layout(props) {\n  const { title, description, infoData: {profile_picture} } = useSiteMetadata()\n  const image = useBlogInfoImage(profile_picture)\n  return (\n    <section\n      className={`${layoutStyles.layout} ${\n        props.page === \"info\" && \n        layoutStyles.info_page}`}\n      style={{\n        backgroundColor: props.bgColor,\n      }}\n    >\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <Header page={props.page} title={title} image={image} />\n      <div className={layoutStyles.content}>{props.children}</div>\n    </section>\n  )\n}","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport default function useBlogData(fileName) {\n    const splits = fileName.split('/')\n    const relativePath = splits[splits.length - 1]\n    const data = useStaticQuery(graphql`\n  query PhotosQuery {\n    allFile(filter:{ extension: { regex: \"/jpeg|jpg|png|gif/\"}}) {\n         edges {\n           node {\n             extension\n             relativePath\n             publicURL\n             childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n           }\n         }\n   }\n   }\n  `)\n    const image = data.allFile.edges.find(image => image.node.relativePath.includes(relativePath))\n    return image.node\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport default function useSiteMetadata() {\n\n  const data = useStaticQuery(graphql`\n    query getMetadata {\n      site {\n        siteMetadata {\n          title\n          description\n          repoUrl\n          infoData {\n            contact {\n              email\n              github_handle\n              twitter_handle\n            }\n            profile_picture\n            cta\n            description\n            background_color\n          }\n        }\n      }\n    }\n  `)\n  \n  return data.site.siteMetadata\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}